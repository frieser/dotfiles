spawn-sh-at-startup "uwsm app -- waybar"
spawn-sh-at-startup "uwsm app -- hypridle -c /var/home/frieser/.config/hypr/hypridle.conf"
spawn-sh-at-startup "uwsm app -- swaybg -i /usr/share/backgrounds/aquamarine.webp -m fill"

prefer-no-csd

input {
    keyboard {
        xkb {}
        numlock
    }

    touchpad {
        tap
        dwt
        natural-scroll
    }

    mouse {}

    trackpoint {}

    warp-mouse-to-focus mode="center-xy-always"
}

output "DP-9" {
    scale 1.25

    variable-refresh-rate
}

cursor {
    hide-when-typing
    hide-after-inactive-ms 5000
}

layout {
    gaps 2

    center-focused-column "always"

    preset-column-widths {
        proportion 0.33333
        proportion 0.5
        proportion 0.66667
    }

    preset-window-heights { }

    default-column-width { proportion 0.66667; }

    focus-ring {
        width 4

        active-color "#ccffee"
        inactive-color "#505050"
    }

    border {
        off
    }

    shadow {}

    struts {
        left 2
        right 2
        top 2
        bottom 2
    }
}

hotkey-overlay {
    skip-at-startup
}

screenshot-path "~/Pictures/Screenshots/Screenshot from %Y-%m-%d %H-%M-%S.png"

animations {
    slowdown 0.5
}

// Add corner radius to windows
window-rule {
    geometry-corner-radius 2
    clip-to-geometry true
}

// Block out screencast windows from being focused
window-rule {
    match is-active=false
    block-out-from "screencast"
}

window-rule {
    match app-id=r#"firefox$"# title="^Picture-in-Picture$"
    open-floating true
}

// Indicate screencasted windows with red colors.
window-rule {
    match is-window-cast-target=true

    focus-ring {
        active-color "#f38ba8"
        inactive-color "#7d0d2d"
    }

    border {
        inactive-color "#7d0d2d"
    }

    shadow {
        color "#7d0d2d70"
    }

    tab-indicator {
        active-color "#f38ba8"
        inactive-color "#7d0d2d"
    }
}


layer-rule {
    match namespace="^notifications$"

    block-out-from "screencast"

    shadow {
        on
        softness 40
        spread 5
        draw-behind-window true
        color "#00000064"
    }
}
layer-rule {
    match namespace="^walker$"

    shadow {
        on
        softness 40
        spread 5
        draw-behind-window true
        color "#00000064"
    }
}
layer-rule {
    match namespace="waybar"
    match at-startup=true

    block-out-from "screencast"

    shadow {
        on
        softness 40
        spread 5
        offset x=0 y=5
        draw-behind-window true
        color "#00000064"
    }

    geometry-corner-radius 12
    place-within-backdrop true
}

gestures {
    hot-corners {
        off
    }
}
binds {
    // Applications
    Mod+T hotkey-overlay-title="Open a Terminal: ghostty" { spawn-sh "uwsm app -- ghostty"; }
    Mod+B hotkey-overlay-title="Open a Browser: zen" { spawn "flatpak" "run" "app.zen_browser.zen";}
    Mod+C hotkey-overlay-title="Open a Chat: ChatGPT" { spawn "flatpak" "run" "app.zen_browser.zen" "--new-window" "chatgpt.com"; }
    Mod+F hotkey-overlay-title="Open a File Manager: nautilus" { spawn-sh "uwsm app -- nautilus"; }
    Mod+N hotkey-overlay-title="Open a Note App: obsidian" { spawn "flatpak" "run" "md.obsidian.Obsidian"; }
    Mod+Space hotkey-overlay-title="Run an Application: walker" { spawn-sh "uwsm app -- walker"; }
    Mod+Shift+Space hotkey-overlay-title="Run an Power menu: rofi power menu" { spawn-sh "uwsm app -- rofi -show p -modi p:'rofi-power-menu'"; }
    Mod+Alt+Space hotkey-overlay-title="Run an Wifi menu: rofi wifi menu" { spawn-sh "uwsm app -- rofi-wifi-menu.sh"; }
    Mod+Shift+Alt+Space hotkey-overlay-title="Run an Wifi menu: rofi wifi menu" { spawn-sh "uwsm app -- rofi-bluetooth-menu"; }
    Super+Alt+L hotkey-overlay-title="Lock the Screen: hyprlock" { spawn-sh "uwsm app -- hyprlock"; }

    // Layers
    Mod+Shift+Slash { show-hotkey-overlay; }
    Super+U hotkey-overlay-title="Toggle waybar" { spawn-sh "pkill -SIGUSR1 waybar"; }

    // Audio
    XF86AudioRaiseVolume allow-when-locked=true { spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.1+"; }
    XF86AudioLowerVolume allow-when-locked=true { spawn-sh "wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.1-"; }
    XF86AudioMute        allow-when-locked=true { spawn-sh "wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle"; }
    XF86AudioMicMute     allow-when-locked=true { spawn-sh "wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle"; }
    XF86AudioPlay        allow-when-locked=true { spawn-sh "playerctl play-pause"; }
    XF86AudioNext        allow-when-locked=true { spawn-sh "playerctl next"; }
    XF86AudioPrev        allow-when-locked=true { spawn-sh "playerctl previous"; }

    // Brightness
    XF86MonBrightnessUp allow-when-locked=true { spawn "brightnessctl" "--class=backlight" "set" "+10%"; }
    XF86MonBrightnessDown allow-when-locked=true { spawn "brightnessctl" "--class=backlight" "set" "10%-"; }

    // Navigation
    Mod+O repeat=false { toggle-overview; }
    Mod+Q repeat=false { close-window; }

    // Focus
    Mod+Left  { focus-column-left; }
    Mod+Down  { focus-window-or-workspace-down; }
    Mod+Up    { focus-window-or-workspace-up; }
    Mod+Right { focus-column-right; }
    Mod+H     { focus-column-left; }
    Mod+J     { focus-window-or-workspace-down; }
    Mod+K     { focus-window-or-workspace-up; }
    Mod+L     { focus-column-right; }

    Mod+A          { focus-column-first; }
    Mod+apostrophe { focus-column-last; }

    // Movement
    Mod+Ctrl+Left  { move-column-left; }
    Mod+Ctrl+Down  { move-window-down-or-to-workspace-down;}
    Mod+Ctrl+Up    { move-window-up-or-to-workspace-up; }
    Mod+Ctrl+Right { move-column-right; }
    Mod+Ctrl+H     { move-column-left; }
    Mod+Ctrl+J     { move-window-down-or-to-workspace-down; }
    Mod+Ctrl+K     { move-window-up-or-to-workspace-up; }
    Mod+Ctrl+L     { move-column-right; }

    Mod+Ctrl+A { move-column-to-first; }
    Mod+Ctrl+apostrophe { move-column-to-last; }

    // Monitors
    // Mod+Shift+Left  { focus-monitor-left; }
    // Mod+Shift+Down  { focus-monitor-down; }
    // Mod+Shift+Up    { focus-monitor-up; }
    // Mod+Shift+Right { focus-monitor-right; }
    // Mod+Shift+H     { focus-monitor-left; }
    // Mod+Shift+J     { focus-monitor-down; }
    // Mod+Shift+K     { focus-monitor-up; }
    // Mod+Shift+L     { focus-monitor-right; }
    //
    // Mod+Shift+Ctrl+Left  { move-column-to-monitor-left; }
    // Mod+Shift+Ctrl+Down  { move-column-to-monitor-down; }
    // Mod+Shift+Ctrl+Up    { move-column-to-monitor-up; }
    // Mod+Shift+Ctrl+Right { move-column-to-monitor-right; }
    // Mod+Shift+Ctrl+H     { move-column-to-monitor-left; }
    // Mod+Shift+Ctrl+J     { move-column-to-monitor-down; }
    // Mod+Shift+Ctrl+K     { move-column-to-monitor-up; }
    // Mod+Shift+Ctrl+L     { move-column-to-monitor-right; }

    // And you can also move a whole workspace to another monitor:
    // Mod+Shift+Ctrl+Left  { move-workspace-to-monitor-left; }

    // Workspaces
    Mod+Ctrl+Shift+J { move-workspace-down; }
    Mod+Ctrl+Shift+K { move-workspace-up; }

    Mod+WheelScrollDown      cooldown-ms=150 { focus-workspace-down; }
    Mod+WheelScrollUp        cooldown-ms=150 { focus-workspace-up; }
    Mod+Ctrl+WheelScrollDown cooldown-ms=150 { move-column-to-workspace-down; }
    Mod+Ctrl+WheelScrollUp   cooldown-ms=150 { move-column-to-workspace-up; }

    Mod+WheelScrollRight      { focus-column-right; }
    Mod+WheelScrollLeft       { focus-column-left; }
    Mod+Ctrl+WheelScrollRight { move-column-right; }
    Mod+Ctrl+WheelScrollLeft  { move-column-left; }

    Mod+Shift+WheelScrollDown      { focus-column-right; }
    Mod+Shift+WheelScrollUp        { focus-column-left; }
    Mod+Ctrl+Shift+WheelScrollDown { move-column-right; }
    Mod+Ctrl+Shift+WheelScrollUp   { move-column-left; }

    Mod+1 { focus-workspace 1; }
    Mod+2 { focus-workspace 2; }
    Mod+3 { focus-workspace 3; }
    Mod+4 { focus-workspace 4; }
    Mod+5 { focus-workspace 5; }
    Mod+6 { focus-workspace 6; }
    Mod+7 { focus-workspace 7; }
    Mod+8 { focus-workspace 8; }
    Mod+9 { focus-workspace 9; }
    Mod+Ctrl+1 { move-column-to-workspace 1; }
    Mod+Ctrl+2 { move-column-to-workspace 2; }
    Mod+Ctrl+3 { move-column-to-workspace 3; }
    Mod+Ctrl+4 { move-column-to-workspace 4; }
    Mod+Ctrl+5 { move-column-to-workspace 5; }
    Mod+Ctrl+6 { move-column-to-workspace 6; }
    Mod+Ctrl+7 { move-column-to-workspace 7; }
    Mod+Ctrl+8 { move-column-to-workspace 8; }
    Mod+Ctrl+9 { move-column-to-workspace 9; }

    Mod+Tab { focus-workspace-previous; }

    // Layout
    Mod+Shift+H { consume-or-expel-window-left; }
    Mod+Shift+L { consume-or-expel-window-right; }
    Mod+Comma  { consume-window-into-column; }
    Mod+Period { expel-window-from-column; }

    Mod+W { switch-preset-column-width; }
    Mod+Shift+W{ switch-preset-window-height; }
    Mod+Ctrl+W { reset-window-height; }

    Mod+X { maximize-column; }
    Mod+Shift+X { fullscreen-window; }

    Mod+minus { set-column-width "-10%"; }
    Mod+I { set-column-width "+10%"; }

    Mod+Shift+E { set-window-height "+10%"; }
    Mod+Shift+C { set-window-height "-10%"; }

    // Floating
    Mod+G       { toggle-window-floating; }
    Mod+Shift+G { switch-focus-between-floating-and-tiling; }

    // Tabs
    Mod+Shift+T { toggle-column-tabbed-display; }

    // Keyboard layouts
    Mod+Ctrl+Space       { switch-layout "next"; }
    Mod+Ctrl+Shift+Space { switch-layout "prev"; }

    // Screenshots
    Mod+Print { screenshot; }
    Mod+Ctrl+Print { screenshot-screen; }
    Mod+Alt+Print { screenshot-window; }
    
    // Pomodoro
    Mod+P { spawn-sh "uwsm app -- pomodoro-cli start --duration 52m --message Work"; }
    Mod+Shift+B { spawn-sh "uwsm app -- pomodoro-cli start --duration 17m --message Break"; }
    Mod+Shift+P { spawn-sh "uwsm app -- pomodoro-cli pause"; }
    Mod+Ctrl+P { spawn-sh "uwsm app -- pomodoro-cli stop"; }

    // Screancast
    Mod+S { set-dynamic-cast-window; }
    Mod+Shift+S { set-dynamic-cast-monitor; }
    Mod+Ctrl+S { clear-dynamic-cast-target; }

    // Remote control
    Mod+Escape allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }

    // Quit
    Mod+Shift+Escape { quit; }
}
